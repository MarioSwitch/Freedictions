<?php
/**
 * Transform "Top xx%" into a value
 * @param float $percentage the percentage to check (ex. 10 for Top 10%)
 * @param string $sql the SQL query to execute
 * @return int the value
 */
function topPercentToValue(float $percentage, string $sql){
    $rawSQL = arraySQL($sql . ";");
    $count = $rawSQL?count($rawSQL):0;
    $offset = floor($count * $percentage / 100) - 1;
    if($offset < 0) return PHP_INT_MAX;
    return intSQL($sql . " LIMIT 1 OFFSET " . $offset . ";");
}

//Arrays
//Goals are defined here
$streak_badges = array(7, 14, 30, 365);
$points_top = array(10, 5, 1, 0.1);
$pointsSpent_top = array(10, 5, 1, 0.1);
//Autogenerated arrays
$points_sql = "SELECT `points` FROM `users` ORDER BY `points` DESC";
$points_badges = array();
foreach($points_top as $top){
    array_push($points_badges, topPercentToValue($top, $points_sql));
}
$pointsSpent_sql = "SELECT `pointsSpent` FROM `users` LEFT JOIN (SELECT `user`, SUM(`points`) AS `pointsSpent` FROM `votes` GROUP BY `user`) `votes2` ON `users`.`username` = `votes2`.`user` ORDER BY `pointsSpent` DESC";
$pointsSpent_badges = array();
foreach($pointsSpent_top as $top){
    array_push($pointsSpent_badges, topPercentToValue($top, $pointsSpent_sql));
}

//Functions
/** Get current badge level
 * @param int $stat the stat to check
 * @param array $tab the array of badges
 * @param string $unit the unit of the stat
 * @return string the current badge level
*/
function getCurrentBadgeLevel(int $stat, array $tab, string $unit){
    if($stat < $tab[0]) return "Aucun";
    if($stat < $tab[1]) return "Bronze<br><small>" . displayInt($stat) . " / " . displayInt($tab[0]) . " " . $unit . "</small>";
    if($stat < $tab[2]) return "Argent<br><small>" . displayInt($stat) . " / " . displayInt($tab[1]) . " " . $unit . "</small>";
    if($stat < $tab[3]) return "Or<br><small>" . displayInt($stat) . " / " . displayInt($tab[2]) . " " . $unit . "</small>";
    if($stat >= $tab[3]) return "Diamant<br><small>" . displayInt($stat) . " / " .  displayInt($tab[3]) . " " . $unit . "</small>";
    return "";
}

/**
 * Get next badge level
 * @param int $stat the stat to check
 * @param array $tab the array of badges
 * @param string $unit the unit of the stat
 * @return string the next badge level
 */
function getNextBadgeLevel(int $stat, array $tab, string $unit){
    if($stat < $tab[0]) return "Bronze<br>Encore " . displayInt($tab[0] - $stat) . " " . $unit . "<br><small>(" . displayInt($stat) . " / " .  displayInt($tab[0]) . ")</small>";
    if($stat < $tab[1]) return "Argent<br>Encore " . displayInt($tab[1] - $stat) . " " . $unit . "<br><small>(" . displayInt($stat) . " / " .  displayInt($tab[1]) . ")</small>";
    if($stat < $tab[2]) return "Or<br>Encore " . displayInt($tab[2] - $stat) . " " . $unit . "<br><small>(" . displayInt($stat) . " / " .  displayInt($tab[2]) . ")</small>";
    if($stat < $tab[3]) return "Diamant<br>Encore " . displayInt($tab[3] - $stat) . " " . $unit . "<br><small>(" . displayInt($stat) . " / " .  displayInt($tab[3]) . ")</small>";
    if($stat >= $tab[3]) return "Félicitations !";
    return "";
}

/**
 * Generate badge row for static badges
 * @param string $svg the SVG keyword (ex. "calendar" for "svg/badges/calendarBronze.svg")
 * @param array $goals the array of goals
 * @param string $unit the unit of the stat
 * @return void
 */
function generateStaticBadgeRow(string $svg, array $goals, string $unit){
    echo "
        <td><img src='svg/badges/" . $svg . "Bronze.svg' alt='Bronze' title='Bronze'><br>" . displayInt($goals[0]) . " " . $unit . "</td>
        <td><img src='svg/badges/" . $svg . "Silver.svg' alt='Argent' title='Argent'><br>" . displayInt($goals[1]) . " " . $unit . "</td>
        <td><img src='svg/badges/" . $svg . "Gold.svg' alt='Or' title='Or'><br>" . displayInt($goals[2]) . " " . $unit . "</td>
        <td><img src='svg/badges/" . $svg . "Diamond.svg' alt='Diamant' title='Diamant'><br>" . displayInt($goals[3]) . " " . $unit . "</td>
    ";
}

/**
 * Generate badge row for dynamic badges
 * @param string $svg the SVG keyword (ex. "points" for "svg/badges/pointsBronze.svg")
 * @param array $top the array of top percentages
 * @param array $goals the array of goals
 * @param string $unit the unit of the stat
 * @return void
 */
function generateDynamicBadgeRow(string $svg, array $top, array $goals, string $unit){
    echo "
        <td><img src='svg/badges/" . $svg . "Bronze.svg' alt='Bronze' title='Bronze'><br>Top " . $top[0] . " %<br><small>" . displayInt($goals[0]) . " " . $unit . "</small></td>
        <td><img src='svg/badges/" . $svg . "Silver.svg' alt='Argent' title='Argent'><br>Top " . $top[1] . " %<br><small>" . displayInt($goals[1]) . " " . $unit . "</small></td>
        <td><img src='svg/badges/" . $svg . "Gold.svg' alt='Or' title='Or'><br>Top " . $top[2] . " %<br><small>" . displayInt($goals[2]) . " " . $unit . "</small></td>
        <td><img src='svg/badges/" . $svg . "Diamond.svg' alt='Diamant' title='Diamant'><br>Top " . $top[3] . " %<br><small>" . displayInt($goals[3]) . " " . $unit . "</small></td>
    ";
}

/**
 * Generate badge icon for static badges
 * @param int $value the current value
 * @param array $goals the array of goals
 * @param string $svg the SVG keyword (ex. "calendar" for "svg/badges/calendarBronze.svg")
 * @param string $name the name in the tooltip (ex. "Jours" for "Jours : 7+")
 * @return string the badge icon
 */
function checkStaticBadge(int $value, array $goals, string $svg, string $name){
    if($value < $goals[0]) return "";
    if($value < $goals[1]) return "<abbr title='" . $name . " : " . $goals[0] . "+'><img class='user-icon' src='svg/badges/" . $svg . "Bronze.svg'></abbr>";
    if($value < $goals[2]) return "<abbr title='" . $name . " : " . $goals[1] . "+'><img class='user-icon' src='svg/badges/" . $svg . "Silver.svg'></abbr>";
    if($value < $goals[3]) return "<abbr title='" . $name . " : " . $goals[2] . "+'><img class='user-icon' src='svg/badges/" . $svg . "Gold.svg'></abbr>";
    if($value >= $goals[3]) return "<abbr title='" . $name . " : " . $goals[3] . "+'><img class='user-icon' src='svg/badges/" . $svg . "Diamond.svg'></abbr>";
    return "";
}

/**
 * Generate badge icon for dynamic badges (top xx%)
 * @param int $value the current value
 * @param array $top the array of top percentages
 * @param array $goals the array of goals
 * @param string $svg the SVG keyword (ex. "points" for "svg/badges/pointsBronze.svg")
 * @param string $name the name in the tooltip (ex. "Points" for "Points : Top 10 %")
 * @return string the badge icon
 */
function checkDynamicBadge(int $value, array $top, array $goals, string $svg, string $name){
    if($value < $goals[0]) return "";
    if($value < $goals[1]) return "<abbr title='" . $name . " : Top " . $top[0] . " %'><img class='user-icon' src='svg/badges/" . $svg . "Bronze.svg'></abbr>";
    if($value < $goals[2]) return "<abbr title='" . $name . " : Top " . $top[1] . " %'><img class='user-icon' src='svg/badges/" . $svg . "Silver.svg'></abbr>";
    if($value < $goals[3]) return "<abbr title='" . $name . " : Top " . $top[2] . " %'><img class='user-icon' src='svg/badges/" . $svg . "Gold.svg'></abbr>";
    if($value >= $goals[3]) return "<abbr title='" . $name . " : Top " . $top[3] . " %'><img class='user-icon' src='svg/badges/" . $svg . "Diamond.svg'></abbr>";
    return "";
}
?>